experiment_name: "informative_missingness"

data:
  test_size: 0.2 # proportion of data to be used for testing
  tabular:
    data_path: "../dataset/preprocessed_tabular/"
    window_size: 7 # intitial window size for tabular data
    feature_type: "numeric" # categorical, numeric
    aggregation_window_size: 12 # hours for aggregation
    training_feature: "target" # target, gender, race, anchor_age
    age_threshold: 30 # age threshold for training feature
    insurance_type: private # private or non-private
  temporal:
    data_path: "../dataset/preprocessed_temporal/"

model:
  model_type: "RandomForest" #"GRUD", "LSTM", "LogisticRegression"
  hyperparameters:
    RandomForest:
      grid_search_params:
        n_estimators: [100, 200]
        max_depth: [5, 10]
        min_samples_split: [2, 5]
        min_samples_leaf: [1]
        class_weight:           
          - null
          - "balanced"
          - { 0: 0.5, 1: 1 }
          - { 0: 0.5, 1: 2 }
      fixed_params:
        n_estimators: 200
        random_state: 42
        max_depth: 10
        min_samples_split: 5
        # class_weight: { 0: 1, 1: 2 }

    LogisticRegression:
      grid_search_params:
        penalty: ["l1", "l2"]
        C: [0.1, 1.0, 10.0]
        solver: ["liblinear"]
      fixed_params:
        penalty: "l2"
        C: 1.0
        solver: "liblinear"

training:
  validation_split: 0.2
evaluation:
  metrics: ["accuracy", "f1_score", "precision", "recall"]
logging:
  log_level: "info" # options: debug, info, warning, error, critical
  log_format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
